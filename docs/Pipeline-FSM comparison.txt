Σύγκριση Pipeline και FSM αρχιτεκτονικής

Pipeline

Η αρχιτεκτονική Pipeline χωρίζει την επεξεργασία του κειμένου σε διαδοχικά στάδια.
Κάθε στάδιο παίρνει το αποτέλεσμα του προηγούμενου και το τροποποιεί.
Έτσι μπορούμε να έχουμε ξεχωριστές συναρτήσεις όπως:

Εντοπισμός και μετατροπή (hex) και (bin)

Εφαρμογή (up), (low), (cap)

Διόρθωση σημείων στίξης

Αντικατάσταση a με an όπου χρειάζεται

Παράδειγμα ροής:

Αρχικό κείμενο → Μετατροπή αριθμών → Μορφοποίηση λέξεων → Διόρθωση σημείων στίξης → Τελικό κείμενο


Πλεονεκτήματα:

•	Καθαρός διαχωρισμός διαδικασιών

•	Ευκολία στο testing, γιατί κάθε στάδιο ελέγχεται μόνο του

•	Ευανάγνωστος και απλός κώδικας (ιδανικός για audit)

Μειονεκτήματα:

•	Κάποια στάδια χρειάζονται πρόσβαση σε προηγούμενες λέξεις (όπως (up, 3)), οπότε θέλει λίγη επιπλέον λογική

•	Ο κώδικας μπορεί να περνάει το ίδιο κείμενο πολλές φορές

FSM (Finite State Machine)

Η FSM δουλεύει διαφορετικά: το πρόγραμμα διαβάζει το κείμενο βήμα-βήμα (token με token) και αλλάζει κατάσταση ανάλογα με το τι συναντά.

Παράδειγμα καταστάσεων:

Normal: διαβάζουμε απλές λέξεις

Marker: μόλις δούμε “(up)” ή “(low)” ή “(cap)”

Quote: όταν είμαστε μέσα σε ‘ ’

Number: όταν συναντάμε αριθμό πριν από (hex) ή (bin)

Το πρόγραμμα έχει μία κύρια λούπα που κοιτάζει την τρέχουσα κατάσταση και αποφασίζει τι να κάνει με την επόμενη λέξη.

Πλεονεκτήματα:

•	Όλα γίνονται σε μία διέλευση του κειμένου (efficient)

•	Πολύ ακριβής έλεγχος context (π.χ. εύκολα εφαρμόζεις (up, 3) σε προηγούμενες λέξεις)

•	Καλή λογική για parsing

Μειονεκτήματα:

•	Περίπλοκος κώδικας

•	Δύσκολο στο testing, γιατί όλα είναι συνδεδεμένα

•	Μικρότερη αναγνωσιμότητα για auditors

Επιλογή αρχιτεκτονικής

Επέλεξα να χρησιμοποιήσω Pipeline.
Το πρόγραμμα θα ελεγχθεί από άλλους auditors, άρα η καθαρότητα και η απλότητα του κώδικα είναι πιο σημαντική από τη βελτιστοποίηση.
Με το Pipeline μπορώ να γράψω μικρές, ξεκάθαρες συναρτήσεις που εφαρμόζουν έναν συγκεκριμένο κανόνα και να εξηγήσω τη ροή του προγράμματος βήμα-βήμα.
Το FSM θα ήταν πιο αποδοτικό, αλλά και πιο δύσκολο να κατανοηθεί ή να ελεγχθεί.
